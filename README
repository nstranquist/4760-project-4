4760 Project 4 - Process Scheduling

Nico Stranquist - October 31, 2021

Professor Bhatia

Usage:
`oss [-h] [-s t] [-l f]`
-h shows a help menu
-s specifies t seconds
-l specifies the name for the log file

Project Description:
This project uses the main executable, `oss`, to simulate the process scheduling portion in an operating system.
oss utilizes shared memory to store a `process_table` data structure, which contains information about the program and the `process_control_block`.
oss also makes use of message queues. It initializes and uses a queue to send and receive messages with the child process.
While running, `oss` decides a random time in the future to call its next process. This process sends a message back to `oss` when it is done.
The program will end when the specified sleep time (seconds) is reached, or if the processes created surpasses the max processes allowed (`50`).
When the program is done running, all message queues and memory segments get cleaned up.
A report is generated at the end of execution, with the information concerning the program's run results. It is in `oss.log` unless specified.

Known Problems:
- Logfile is generated with params but is not getting all of the information from the program in the report section
- Scheduler runs through the program sequentially, with the process completing before being interrupted
